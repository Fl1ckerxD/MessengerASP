@model IEnumerable<MessageViewModel>
@{
    ViewData["Title"] = "Chat";
}

<div>
    Введите сообщение:<br />
    <input type="text" id="message" /><br /><br />
    <input type="button" id="sendBtn" value="Отправить" disabled="disabled" />
</div>
<div id="chatroom">
    @foreach (var message in Model)
    {
        <p>
            <b>@message.SentAt </b>
            <b>@message.UserName: </b>
            @message.Content
        </p>
    }
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    document.getElementById("sendBtn").addEventListener("click", function () {
        const message = document.getElementById("message").value;

        hubConnection.invoke("Send", message) // отправка данных серверу
            .catch(function (err) {
                return console.error(err.toString());
            });
    });
    // получение данных с сервера
    hubConnection.on("Receive", function (message, userName, dateUtc) {

        // создаем элемент <b> для имени пользователя
        const dateElem = document.createElement("b");
        dateElem.textContent = `${dateUtc} `;

        // создаем элемент <b> для имени пользователя
        const userNameElem = document.createElement("b");
        userNameElem.textContent = `${userName}: `;

        // создает элемент <p> для сообщения пользователя
        const elem = document.createElement("p");
        elem.appendChild(dateElem);
        elem.appendChild(userNameElem);
        elem.appendChild(document.createTextNode(message));

        // добавляем новый элемент в самое начало
        // для этого сначала получаем первый элемент
        //const firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").appendChild(elem);
    });

    hubConnection.start()
        .then(function () {
            document.getElementById("sendBtn").disabled = false;
        })
        .catch(function (err) {
            return console.error(err.toString());
        });
</script>
